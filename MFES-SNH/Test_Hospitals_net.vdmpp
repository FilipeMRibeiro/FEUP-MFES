class Test_Hospitals_net

instance variables
		n: Hospitals_net := new Hospitals_net();
		u: User := new User(1);
		uu: User := new User(7);
		h: Hospital := new Hospital(2);
		hh: Hospital := new Hospital(5);
		hhh: Hospital := new Hospital(6);
		d: Doctor := new Doctor(3);
		dd: Doctor := new Doctor(4);
		
operations
		private assertTrue: bool ==> ()
    assertTrue(cond) == return
    pre cond;
    
    private testHospitals_net: () ==> ()
    testHospitals_net() == 
    (
    		assertTrue(h not in set n.getHospitals());
    		n.addHospital(h);
    		assertTrue(h in set n.getHospitals());
    		
    		assertTrue(d not in set n.getDoctors());
    		n.addDoctor(d);
    		assertTrue(d in set n.getDoctors());
    		
    		assertTrue(n.docInHospital(d,h) = false);
    		h.addDoctor(d);
    		assertTrue(n.docInHospital(d,h));
    		
    		assertTrue(u not in set n.getUsers());
    		n.addUser(u);
    		assertTrue(u in set n.getUsers());
    		
    		assertTrue(d not in set n.getSpecialtyDoctors("spec"));
    		d.setSpecialty("spec");
    		assertTrue(d in set n.getSpecialtyDoctors("spec"));
    		
    		assertTrue("spec" not in set h.getSpecialties());
    		h.addSpecialty("spec");
    		assertTrue("spec" in set h.getSpecialties());
    		
    		assertTrue(h in set n.getHospitalsSpecialty("spec"));
    		
    		assertTrue("subs" not in set h.getSubsystems());
    		h.addSubsystem("subs");
    		assertTrue("subs" in set h.getSubsystems());
    		
    		assertTrue(h in set n.getHospitalsSubsystems("subs"));
    		
    		n.addUser(uu);
    		d.addUser(uu);
    		dd.setSpecialty("spec");
    		assertTrue(d = n.getMinWaitDoc("spec"));
    		assertTrue(dd <> n.getMinWaitDoc("spec"));
    		
    		
    		
    		assertTrue(h in set n.docHospitals(d));
    		
    		assertTrue(h.getId() = 2);
    		
    		d.setName("doc");
    		assertTrue(d.getName() = "doc");
    		
    		assertTrue(u not in set d.getUsers());
    		d.addUser(u);
    		assertTrue(u in set d.getUsers());
    		
    		assertTrue(d.getId() = 3);
    		
    		
    		assertTrue(u.getId() = 1);
    		
    		u.setName("user1");
    		assertTrue(u.getName() = "user1");
    		
    		u.setSpecialty("spec");
    		assertTrue(u.getSpecialty() = "spec");
    		
    		u.setPassword("pass");
    		assertTrue(u.getPassword() = "pass");
    		
    		u.setUsername("user");
    		assertTrue(u.getUsername() = "user");
    		
    		--u.setLoggedIn(true);
    		u.login("user", "pass");
    		assertTrue(u.getLoggedIn());
    		
    );
    
    public static main: () ==> ()
    main() ==
    (
    		new Test_Hospitals_net().testHospitals_net();
    );
		
end Test_Hospitals_net